package com.basic;

/**
 * @Description: JVM内存模型
 * @Author: QHB
 * @Date: 2022/10/10 16:00
 */
public class MemoryModel {
    public static void main(String[] args) {

    }
}
/*

java虚拟机JVM内存模型 -- 为了更好地理解面向对象

1. java 虚拟机的内存可以分为三个部分: 堆 栈 方法区

栈描述的是方法执行的内存模型, 每个方法被调用时都会创建一个栈帧(存储局部变量, 操作数, 方法出口等)
JVM为每个线程创建一个栈, 用于存放该线程执行方法的信息(实际参数, 局部变量等)
栈属于线程私有, 不能实现线程间的共享
栈的存储特性是 先进后出, 后进先出
栈是由系统自动分配, 速度快, 栈是一个连续的内存空间



堆用于存储创建好的对象和数组(数组也是对象)
JVM只有一个堆, 被所有线程共享
堆是一个不连续的内存空间, 分配灵活, 速度慢
堆被所有的线程所共享, 在堆上的区域, 会被垃圾回收器做进一步划分, 例如新生代, 老年代的划分等



方法区(本质也是堆)是JAVA虚拟机规范, 可以有不同的实现
JVM只有一个方法区, 被所有线程共享
方法区实际也是堆, 只是用于存储类, 常量相关的信息
用来存放程序中永远不变或者唯一的内容(类信息, 静态变量, 字符串常量等)
常量池主要存放常量, 如文本字符串, final常量值


 */